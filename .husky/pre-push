#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "🚀 开始 pre-push 检查流程..."
echo "═══════════════════════════════════════════════════════════════"

# 检查工作目录状态
echo "\n📋 阶段1: 工作目录状态检查"
echo "─────────────────────────────────────────────────────────────"

if [ -n "$(git status --porcelain)" ]; then
  echo "❌ 工作目录不干净，存在未提交的更改"
  echo "💡 请先提交或暂存所有更改后再推送"
  git status --short
  exit 1
fi
echo "✅ 工作目录干净"

# 检查当前分支
echo "\n📋 阶段2: 分支检查"
echo "─────────────────────────────────────────────────────────────"

current_branch=$(git branch --show-current)
echo "📍 当前分支: $current_branch"

if [ "$current_branch" = "main" ] || [ "$current_branch" = "master" ]; then
  echo "⚠️  正在推送到主分支: $current_branch"
else
  echo "📝 推送到功能分支: $current_branch"
fi

# 敏感信息检查
echo "\n📋 阶段3: 安全检查"
echo "─────────────────────────────────────────────────────────────"

echo "🔍 检查敏感信息泄露..."
# 检查是否有敏感信息被意外提交
sensitive_patterns="password|secret|key|token|api_key|private"
if git diff --cached --name-only | xargs grep -l -i -E "$sensitive_patterns" 2>/dev/null; then
  echo "❌ 发现可能的敏感信息"
  echo "💡 请检查并移除敏感信息后再推送"
  exit 1
fi
echo "✅ 未发现敏感信息泄露"

echo "\n🎉 pre-push 检查全部通过！"
echo "✅ 代码已准备好推送"
echo "💡 注意: CI/CD质量检测已禁用，如需完整检测请手动运行相关脚本"
echo "═══════════════════════════════════════════════════════════════"